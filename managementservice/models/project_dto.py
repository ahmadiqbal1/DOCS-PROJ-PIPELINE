# -*- coding: utf-8 -*-

"""
managementservice

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ProjectDto(object):

    """Implementation of the 'ProjectDto' model.

    TODO: type model description here.

    Attributes:
        title (string): TODO: type description here.
        description (string): TODO: type description here.
        failed_runs (float): TODO: type description here.
        successful_runs (float): TODO: type description here.
        executing_runs (float): TODO: type description here.
        pipelines_count (float): TODO: type description here.
        owner_id (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "title": 'title',
        "description": 'description',
        "failed_runs": 'failedRuns',
        "successful_runs": 'successfulRuns',
        "executing_runs": 'executingRuns',
        "pipelines_count": 'pipelinesCount',
        "owner_id": 'ownerId'
    }

    def __init__(self,
                 title=None,
                 description=None,
                 failed_runs=None,
                 successful_runs=None,
                 executing_runs=None,
                 pipelines_count=None,
                 owner_id=None):
        """Constructor for the ProjectDto class"""

        # Initialize members of the class
        self.title = title 
        self.description = description 
        self.failed_runs = failed_runs 
        self.successful_runs = successful_runs 
        self.executing_runs = executing_runs 
        self.pipelines_count = pipelines_count 
        self.owner_id = owner_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        title = dictionary.get("title") if dictionary.get("title") else None
        description = dictionary.get("description") if dictionary.get("description") else None
        failed_runs = dictionary.get("failedRuns") if dictionary.get("failedRuns") else None
        successful_runs = dictionary.get("successfulRuns") if dictionary.get("successfulRuns") else None
        executing_runs = dictionary.get("executingRuns") if dictionary.get("executingRuns") else None
        pipelines_count = dictionary.get("pipelinesCount") if dictionary.get("pipelinesCount") else None
        owner_id = dictionary.get("ownerId") if dictionary.get("ownerId") else None
        # Return an object of this model
        return cls(title,
                   description,
                   failed_runs,
                   successful_runs,
                   executing_runs,
                   pipelines_count,
                   owner_id)
