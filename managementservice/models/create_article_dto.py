# -*- coding: utf-8 -*-

"""
managementservice

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from managementservice.api_helper import APIHelper


class CreateArticleDto(object):

    """Implementation of the 'CreateArticleDto' model.

    TODO: type model description here.

    Attributes:
        title (string): TODO: type description here.
        author_id (string): TODO: type description here.
        category (string): TODO: type description here.
        mtype (string): TODO: type description here.
        article_body (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "title": 'title',
        "author_id": 'authorId',
        "category": 'category',
        "mtype": 'type',
        "article_body": 'articleBody'
    }

    _optionals = [
        'title',
        'author_id',
        'category',
        'mtype',
        'article_body',
    ]

    def __init__(self,
                 title=APIHelper.SKIP,
                 author_id=APIHelper.SKIP,
                 category=APIHelper.SKIP,
                 mtype=APIHelper.SKIP,
                 article_body=APIHelper.SKIP):
        """Constructor for the CreateArticleDto class"""

        # Initialize members of the class
        if title is not APIHelper.SKIP:
            self.title = title 
        if author_id is not APIHelper.SKIP:
            self.author_id = author_id 
        if category is not APIHelper.SKIP:
            self.category = category 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 
        if article_body is not APIHelper.SKIP:
            self.article_body = article_body 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        title = dictionary.get("title") if dictionary.get("title") else APIHelper.SKIP
        author_id = dictionary.get("authorId") if dictionary.get("authorId") else APIHelper.SKIP
        category = dictionary.get("category") if dictionary.get("category") else APIHelper.SKIP
        mtype = dictionary.get("type") if dictionary.get("type") else APIHelper.SKIP
        article_body = dictionary.get("articleBody") if dictionary.get("articleBody") else APIHelper.SKIP
        # Return an object of this model
        return cls(title,
                   author_id,
                   category,
                   mtype,
                   article_body)
